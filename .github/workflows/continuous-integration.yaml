name: Continuous Integration
on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions: 
  packages: write

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      PR_NUMBER: '12'
      IMAGE_PR_TAG: pr-${{ env.PR_NUMBER }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - name: npm Install
      run: npm ci

    - name: Lint code
      run: npm run lint

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - name: npm Install
      run: npm ci

    - name: Build server
      run: npm run build
    
    - name: Upload server artifact
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
    - name: "npm: Install"
      run: npm ci

    - name: "Build server"
      run: npm test

  container:
    runs-on: ubuntu-latest
    needs: build
    env:
      IMAGE_REPO: ghcr.io/${{ github.repository }}/preview
      IMAGE_TAG: rev-${{ github.sha }}
    steps:
    - uses: actions/checkout@v3
    - name: Download server artifact
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    
    - name: Login to GitHub Container Repository
      run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io --username ${{ github.actor }} --password-stdin

    - name: Build container
      run: docker build -t $IMAGE_REPO:$IMAGE_TAG .
      env:
        DOCKER_BUILDKIT: 1
    - name: Publish container
      run: docker push $IMAGE_REPO:$IMAGE_TAG
